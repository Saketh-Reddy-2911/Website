{"title":"MID-PROJECT","markdown":{"yaml":{"editor":"visual"},"headingText":"MID-PROJECT","containsRefs":false,"markdown":"\n\n\nSaketh Reddy Puchakayala\n\nG01476856\n\nVarun Tej Mallekedi\n\nG01486904\n\n# Introduction\n\nData is visualized in many forms and many ways, there are situations where the visualizations are exploited and shown in the favor of the other person perspectives. Likewise there are visualizations which are good in form but not easy to understand, so for this project here we have chosen a topic \"The best college in each state in 2019\" here in this visualization the US map is not in exact shape and each state university is separated by circles. So here we took the problem statement and analyzed it and made four perfect graphs for the visualization.\n\n![](images/Screenshot%202024-03-11%20133902.png)\n\nThis is the data that is being represented in the map, so as a first step we created a csv file by extracting it from the data provided in the visualization and from there the graphs are built.\n\n```{r}\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\", header = TRUE)\nword_counts <- table(unlist(strsplit(as.character(data$TYPE), \" \")))\nword1 <- \"Public\"\nword2 <- \"Private\"\ncount_word1 <- word_counts[word1]\ncount_word2 <- word_counts[word2]\ncomparison <- data.frame(Words = c(word1, word2), Count = c(count_word1, count_word2))\nbarplot(comparison$Count,names.arg = comparison$Words,main = \"Comparison of Word Counts\")\nlibrary(ggplot2)\nggplot(comparison, aes(x = Words, y = Count, fill = Words)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Ratio between public and private universities\", x = \"University Type\", y = \"Number of Universities\") +\n  theme_minimal() +theme(legend.title = element_blank())\n\n\n\n```\n\nAs in the first step we thought of comparing the number of public universities and private universities, so here we accessed the column university type and counted the number of public and private universities and came up with total number of public and private universities. From there we bar graph and represented the private and public universities side by side on x-axis and number of universities on y-axis and depicted the graph.\n\n```{r}\nlibrary(tidyverse)\nlibrary(maps)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(plotly)\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/CSV COLLEGES .csv\", fileEncoding = \"ISO-8859-1\")\ndata$average_early_career_salary <- as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", data$average_early_career_salary)))\nus_map <- map_data(\"state\")\ndata <- data %>%\n  rename(region = state) %>%\n  mutate(region = tolower(region))\nmap_data <- left_join(us_map, data, by = \"region\")\nmap_data <- map_data %>% \n  arrange(region)\ngg <- ggplot(data = map_data, aes(x = long, y = lat, group = group, \n                                  fill = average_early_career_salary,  \n                                  text = paste(\"State: \", region, \n                                               \"<br>Average Salary: $\", average_early_career_salary, \n                                               \"<br>University Name: \", name))) +\n  geom_polygon(color = \"#FFFFFF\") +\n  geom_text_repel(aes(label = name), size = 3, color = \"#121D12\", \n                  box.padding = unit(0.35, \"lines\"), \n                  point.padding = unit(0.5, \"lines\"), \n                  segment.color = \"#FFFFFF\") +\n  scale_fill_gradient(name = \"Average Salary ($)\", low = \"lightblue\", high = \"darkblue\", \n                      na.value = \"#55C555\", guide = \"legend\") +  \n  labs(title = \"University Wise Average Salary\", \n       subtitle = \"Darker colors represent higher average salaries\") + \n  theme_minimal() + \n  theme(legend.position = \"right\")\nggplotly(gg, tooltip = \"text\")\n```\n\nSince the original data is in the wrong shape of US map we thought of taking the exact map and represent the data. So we accessed maps from the library and used plotly with this we represented each state name, average salary and university name. As we put the curser on the state it represents the data.\n\n```{r}\nlibrary(ggplot2)\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\nstr(data)\nhead(data)\ndata_subset <- head(data, 10)\nlibrary(plotly)\nplot_ly(data = data_subset, x = ~NAME, y = ~AVERAGE.EARLY.CAREER.SALARY, type = 'scatter', mode = 'lines') %>%\n  layout(title = \"Line Graph (Top 10 Rows)\", xaxis = list(title = \"College Name\"), yaxis = list(title = \"Average Early Career Salary\"))\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Line Graph (Top 10 Rows)\", x = \"College Name\", y = \"Average Early Career Salary\")\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Average pay after graduation\", x = \"College Name\", y = \"Average Early Career Salary\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n```\n\nThe second graph represents the data of all states, universities and their average pay in the map. So for the third graph we created a subset of top 10 colleges and their pay with the line graph and represented college name on x-axis and average early carrier salary on y-axis. It shows that Stanford university students gets high pay compared to rest other.\n\n```{r}\n# Load the required library\nlibrary(plotly)\n\n# Step 1: Read the CSV file\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\n\n# Step 2: Check the structure and content of your data\nstr(data)\nhead(data)\n\n# Step 3: Subset your data to include only the first 10 rows\ndata_subset <- head(data, 10)\n\n# Step 4: Create a scatter plot using Plotly\nplot_ly(data_subset, x = ~RANK, y = ~NAME, type = 'scatter', mode = 'markers') %>%\n  layout(title = \"Scatter Plot of top 10 colleges\", xaxis = list(title = \"X Axis Label\"), yaxis = list(title = \"Y Axis Label\"))\n\n```\n\nThe scatter plot depicts the data of top 10 colleges with their ranks being posted on it and x-axis with the rank number and y-axis with the college name and shows the top college.\n\n# YouTube link\n\n<https://youtu.be/dyW380dsuu0>\n","srcMarkdownNoYaml":"\n\n# MID-PROJECT\n\nSaketh Reddy Puchakayala\n\nG01476856\n\nVarun Tej Mallekedi\n\nG01486904\n\n# Introduction\n\nData is visualized in many forms and many ways, there are situations where the visualizations are exploited and shown in the favor of the other person perspectives. Likewise there are visualizations which are good in form but not easy to understand, so for this project here we have chosen a topic \"The best college in each state in 2019\" here in this visualization the US map is not in exact shape and each state university is separated by circles. So here we took the problem statement and analyzed it and made four perfect graphs for the visualization.\n\n![](images/Screenshot%202024-03-11%20133902.png)\n\nThis is the data that is being represented in the map, so as a first step we created a csv file by extracting it from the data provided in the visualization and from there the graphs are built.\n\n```{r}\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\", header = TRUE)\nword_counts <- table(unlist(strsplit(as.character(data$TYPE), \" \")))\nword1 <- \"Public\"\nword2 <- \"Private\"\ncount_word1 <- word_counts[word1]\ncount_word2 <- word_counts[word2]\ncomparison <- data.frame(Words = c(word1, word2), Count = c(count_word1, count_word2))\nbarplot(comparison$Count,names.arg = comparison$Words,main = \"Comparison of Word Counts\")\nlibrary(ggplot2)\nggplot(comparison, aes(x = Words, y = Count, fill = Words)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Ratio between public and private universities\", x = \"University Type\", y = \"Number of Universities\") +\n  theme_minimal() +theme(legend.title = element_blank())\n\n\n\n```\n\nAs in the first step we thought of comparing the number of public universities and private universities, so here we accessed the column university type and counted the number of public and private universities and came up with total number of public and private universities. From there we bar graph and represented the private and public universities side by side on x-axis and number of universities on y-axis and depicted the graph.\n\n```{r}\nlibrary(tidyverse)\nlibrary(maps)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(plotly)\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/CSV COLLEGES .csv\", fileEncoding = \"ISO-8859-1\")\ndata$average_early_career_salary <- as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", data$average_early_career_salary)))\nus_map <- map_data(\"state\")\ndata <- data %>%\n  rename(region = state) %>%\n  mutate(region = tolower(region))\nmap_data <- left_join(us_map, data, by = \"region\")\nmap_data <- map_data %>% \n  arrange(region)\ngg <- ggplot(data = map_data, aes(x = long, y = lat, group = group, \n                                  fill = average_early_career_salary,  \n                                  text = paste(\"State: \", region, \n                                               \"<br>Average Salary: $\", average_early_career_salary, \n                                               \"<br>University Name: \", name))) +\n  geom_polygon(color = \"#FFFFFF\") +\n  geom_text_repel(aes(label = name), size = 3, color = \"#121D12\", \n                  box.padding = unit(0.35, \"lines\"), \n                  point.padding = unit(0.5, \"lines\"), \n                  segment.color = \"#FFFFFF\") +\n  scale_fill_gradient(name = \"Average Salary ($)\", low = \"lightblue\", high = \"darkblue\", \n                      na.value = \"#55C555\", guide = \"legend\") +  \n  labs(title = \"University Wise Average Salary\", \n       subtitle = \"Darker colors represent higher average salaries\") + \n  theme_minimal() + \n  theme(legend.position = \"right\")\nggplotly(gg, tooltip = \"text\")\n```\n\nSince the original data is in the wrong shape of US map we thought of taking the exact map and represent the data. So we accessed maps from the library and used plotly with this we represented each state name, average salary and university name. As we put the curser on the state it represents the data.\n\n```{r}\nlibrary(ggplot2)\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\nstr(data)\nhead(data)\ndata_subset <- head(data, 10)\nlibrary(plotly)\nplot_ly(data = data_subset, x = ~NAME, y = ~AVERAGE.EARLY.CAREER.SALARY, type = 'scatter', mode = 'lines') %>%\n  layout(title = \"Line Graph (Top 10 Rows)\", xaxis = list(title = \"College Name\"), yaxis = list(title = \"Average Early Career Salary\"))\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Line Graph (Top 10 Rows)\", x = \"College Name\", y = \"Average Early Career Salary\")\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Average pay after graduation\", x = \"College Name\", y = \"Average Early Career Salary\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n```\n\nThe second graph represents the data of all states, universities and their average pay in the map. So for the third graph we created a subset of top 10 colleges and their pay with the line graph and represented college name on x-axis and average early carrier salary on y-axis. It shows that Stanford university students gets high pay compared to rest other.\n\n```{r}\n# Load the required library\nlibrary(plotly)\n\n# Step 1: Read the CSV file\ndata <- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\n\n# Step 2: Check the structure and content of your data\nstr(data)\nhead(data)\n\n# Step 3: Subset your data to include only the first 10 rows\ndata_subset <- head(data, 10)\n\n# Step 4: Create a scatter plot using Plotly\nplot_ly(data_subset, x = ~RANK, y = ~NAME, type = 'scatter', mode = 'markers') %>%\n  layout(title = \"Scatter Plot of top 10 colleges\", xaxis = list(title = \"X Axis Label\"), yaxis = list(title = \"Y Axis Label\"))\n\n```\n\nThe scatter plot depicts the data of top 10 colleges with their ranks being posted on it and x-axis with the rank number and y-axis with the college name and shows the top college.\n\n# YouTube link\n\n<https://youtu.be/dyW380dsuu0>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"page3.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":{"dark":"darkly","light":"flatly"},"editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}