[
  {
    "objectID": "page5.html",
    "href": "page5.html",
    "title": "Photo and Text Layout Example",
    "section": "",
    "text": "# Left Aligned Text\nThis is the text that will appear on the left side of the page. You can write your content here.\n\n\n&lt;img src=\"\"C:/Users/Saketh Reddy/Downloads/IMG_20230604_234353_319.jpg\"\" alt=\"Image\" width=\"300\"&gt;"
  },
  {
    "objectID": "page3.html",
    "href": "page3.html",
    "title": "MID-PROJECT",
    "section": "",
    "text": "MID-PROJECT\nSaketh Reddy Puchakayala\nG01476856\nVarun Tej Mallekedi\nG01486904\n\n\nIntroduction\nData is visualized in many forms and many ways, there are situations where the visualizations are exploited and shown in the favor of the other person perspectives. Likewise there are visualizations which are good in form but not easy to understand, so for this project here we have chosen a topic “The best college in each state in 2019” here in this visualization the US map is not in exact shape and each state university is separated by circles. So here we took the problem statement and analyzed it and made four perfect graphs for the visualization.\n\nThis is the data that is being represented in the map, so as a first step we created a csv file by extracting it from the data provided in the visualization and from there the graphs are built.\n\ndata &lt;- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\", header = TRUE)\nword_counts &lt;- table(unlist(strsplit(as.character(data$TYPE), \" \")))\nword1 &lt;- \"Public\"\nword2 &lt;- \"Private\"\ncount_word1 &lt;- word_counts[word1]\ncount_word2 &lt;- word_counts[word2]\ncomparison &lt;- data.frame(Words = c(word1, word2), Count = c(count_word1, count_word2))\nbarplot(comparison$Count,names.arg = comparison$Words,main = \"Comparison of Word Counts\")\nlibrary(ggplot2)\n\n\n\nggplot(comparison, aes(x = Words, y = Count, fill = Words)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Ratio between public and private universities\", x = \"University Type\", y = \"Number of Universities\") +\n  theme_minimal() +theme(legend.title = element_blank())\n\n\n\n\nAs in the first step we thought of comparing the number of public universities and private universities, so here we accessed the column university type and counted the number of public and private universities and came up with total number of public and private universities. From there we bar graph and represented the private and public universities side by side on x-axis and number of universities on y-axis and depicted the graph.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(maps)\n\nWarning: package 'maps' was built under R version 4.3.3\n\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.3.3\n\nlibrary(dplyr)\nlibrary(plotly)\n\nWarning: package 'plotly' was built under R version 4.3.3\n\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ndata &lt;- read.csv(\"D:/Data Analytics/Sem 1/STAT/CSV COLLEGES .csv\", fileEncoding = \"ISO-8859-1\")\ndata$average_early_career_salary &lt;- as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", data$average_early_career_salary)))\nus_map &lt;- map_data(\"state\")\ndata &lt;- data %&gt;%\n  rename(region = state) %&gt;%\n  mutate(region = tolower(region))\nmap_data &lt;- left_join(us_map, data, by = \"region\")\nmap_data &lt;- map_data %&gt;% \n  arrange(region)\ngg &lt;- ggplot(data = map_data, aes(x = long, y = lat, group = group, \n                                  fill = average_early_career_salary,  \n                                  text = paste(\"State: \", region, \n                                               \"&lt;br&gt;Average Salary: $\", average_early_career_salary, \n                                               \"&lt;br&gt;University Name: \", name))) +\n  geom_polygon(color = \"#FFFFFF\") +\n  geom_text_repel(aes(label = name), size = 3, color = \"#121D12\", \n                  box.padding = unit(0.35, \"lines\"), \n                  point.padding = unit(0.5, \"lines\"), \n                  segment.color = \"#FFFFFF\") +\n  scale_fill_gradient(name = \"Average Salary ($)\", low = \"lightblue\", high = \"darkblue\", \n                      na.value = \"#55C555\", guide = \"legend\") +  \n  labs(title = \"University Wise Average Salary\", \n       subtitle = \"Darker colors represent higher average salaries\") + \n  theme_minimal() + \n  theme(legend.position = \"right\")\nggplotly(gg, tooltip = \"text\")\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomTextRepel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\n\n\n\n\n\nSince the original data is in the wrong shape of US map we thought of taking the exact map and represent the data. So we accessed maps from the library and used plotly with this we represented each state name, average salary and university name. As we put the curser on the state it represents the data.\n\nlibrary(ggplot2)\ndata &lt;- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\nstr(data)\n\n'data.frame':   51 obs. of  7 variables:\n $ RANK                       : int  1 2 3 5 6 7 9 10 11 15 ...\n $ NAME                       : chr  \"Harvard University\" \"Stanford University\" \"Yale University\" \"Princeton University\" ...\n $ STATE                      : chr  \"MASSACHUSETTS\" \"CALIFORNIA\" \"CONNECTICUT\" \"NEW JERSEY\" ...\n $ NET.PRICE                  : chr  \"14,327\" \"13,261\" \"18,627\" \"9,327\" ...\n $ TYPE                       : chr  \"Private not-for-profit\" \"Private not-for-profit\" \"Private not-for-profit\" \"Private not-for-profit\" ...\n $ AVERAGE.DEBT...            : chr  \"7,372\" \"8,155\" \"4,962\" \"4,451\" ...\n $ AVERAGE.EARLY.CAREER.SALARY: chr  \"74,800\" \"79,000\" \"70,300\" \"75,200\" ...\n\nhead(data)\n\n  RANK                       NAME         STATE NET.PRICE\n1    1         Harvard University MASSACHUSETTS    14,327\n2    2        Stanford University    CALIFORNIA    13,261\n3    3            Yale University   CONNECTICUT    18,627\n4    5       Princeton University    NEW JERSEY     9,327\n5    6 University of Pennsylvania  PENNSYLVANIA    24,242\n6    7           Brown University  RHODE ISLAND    30,205\n                    TYPE AVERAGE.DEBT... AVERAGE.EARLY.CAREER.SALARY\n1 Private not-for-profit           7,372                      74,800\n2 Private not-for-profit           8,155                      79,000\n3 Private not-for-profit           4,962                      70,300\n4 Private not-for-profit           4,451                      75,200\n5 Private not-for-profit           7,733                      72,800\n6 Private not-for-profit           7,794                      68,200\n\ndata_subset &lt;- head(data, 10)\nlibrary(plotly)\nplot_ly(data = data_subset, x = ~NAME, y = ~AVERAGE.EARLY.CAREER.SALARY, type = 'scatter', mode = 'lines') %&gt;%\n  layout(title = \"Line Graph (Top 10 Rows)\", xaxis = list(title = \"College Name\"), yaxis = list(title = \"Average Early Career Salary\"))\n\n\n\n\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Line Graph (Top 10 Rows)\", x = \"College Name\", y = \"Average Early Career Salary\")\n\n\n\nggplot(data_subset, aes(x = NAME, y = AVERAGE.EARLY.CAREER.SALARY, group = 1)) +\n  geom_line() +\n  labs(title = \"Average pay after graduation\", x = \"College Name\", y = \"Average Early Career Salary\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\nThe second graph represents the data of all states, universities and their average pay in the map. So for the third graph we created a subset of top 10 colleges and their pay with the line graph and represented college name on x-axis and average early carrier salary on y-axis. It shows that Stanford university students gets high pay compared to rest other.\n\n# Load the required library\nlibrary(plotly)\n\n# Step 1: Read the CSV file\ndata &lt;- read.csv(\"D:/Data Analytics/Sem 1/STAT/colleges.csv\")\n\n# Step 2: Check the structure and content of your data\nstr(data)\n\n'data.frame':   51 obs. of  7 variables:\n $ RANK                       : int  1 2 3 5 6 7 9 10 11 15 ...\n $ NAME                       : chr  \"Harvard University\" \"Stanford University\" \"Yale University\" \"Princeton University\" ...\n $ STATE                      : chr  \"MASSACHUSETTS\" \"CALIFORNIA\" \"CONNECTICUT\" \"NEW JERSEY\" ...\n $ NET.PRICE                  : chr  \"14,327\" \"13,261\" \"18,627\" \"9,327\" ...\n $ TYPE                       : chr  \"Private not-for-profit\" \"Private not-for-profit\" \"Private not-for-profit\" \"Private not-for-profit\" ...\n $ AVERAGE.DEBT...            : chr  \"7,372\" \"8,155\" \"4,962\" \"4,451\" ...\n $ AVERAGE.EARLY.CAREER.SALARY: chr  \"74,800\" \"79,000\" \"70,300\" \"75,200\" ...\n\nhead(data)\n\n  RANK                       NAME         STATE NET.PRICE\n1    1         Harvard University MASSACHUSETTS    14,327\n2    2        Stanford University    CALIFORNIA    13,261\n3    3            Yale University   CONNECTICUT    18,627\n4    5       Princeton University    NEW JERSEY     9,327\n5    6 University of Pennsylvania  PENNSYLVANIA    24,242\n6    7           Brown University  RHODE ISLAND    30,205\n                    TYPE AVERAGE.DEBT... AVERAGE.EARLY.CAREER.SALARY\n1 Private not-for-profit           7,372                      74,800\n2 Private not-for-profit           8,155                      79,000\n3 Private not-for-profit           4,962                      70,300\n4 Private not-for-profit           4,451                      75,200\n5 Private not-for-profit           7,733                      72,800\n6 Private not-for-profit           7,794                      68,200\n\n# Step 3: Subset your data to include only the first 10 rows\ndata_subset &lt;- head(data, 10)\n\n# Step 4: Create a scatter plot using Plotly\nplot_ly(data_subset, x = ~RANK, y = ~NAME, type = 'scatter', mode = 'markers') %&gt;%\n  layout(title = \"Scatter Plot of top 10 colleges\", xaxis = list(title = \"X Axis Label\"), yaxis = list(title = \"Y Axis Label\"))\n\n\n\n\n\nThe scatter plot depicts the data of top 10 colleges with their ranks being posted on it and x-axis with the rank number and y-axis with the college name and shows the top college."
  },
  {
    "objectID": "page1.html",
    "href": "page1.html",
    "title": "About Me",
    "section": "",
    "text": "About Me\nHi myself SAKETH REDDY PUCHAKAYALA mechanical engineer from India currently pursuing Master’s of science in Data Analytics Engineering at George Mason University, fairfax VA. I am from mechanical background but i am so much fascinated towards data related things and i believe that any stream we may consider involves data related aspects in it. That interest made me take this course at graduation level and came all the way leaving my family and friends. Now my ultimate goal is to interlink my mechanical knowledge with the data analytics ideas and come up with my own firm."
  },
  {
    "objectID": "page2.html",
    "href": "page2.html",
    "title": "Education",
    "section": "",
    "text": "Education\nMechanical Engineer - Vasavi College of Engineering, India. 2023\nHigh school - Kendriya vidyalaya, India. 2019"
  }
]